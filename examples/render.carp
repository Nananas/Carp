
(def TS 4)
(def CS 12)


(defn render-cell [cell xx yy renderer]
  (do
    (for (i 0 (count cell))
      (let [x (mod i 3)
            y (/ i 3)]
            (do 
              (if (= @(nth cell i) 1)
                (SDL_SetRenderDrawColor renderer 0 0 0 255)
                (SDL_SetRenderDrawColor renderer 255 255 255 255))
              (SDL_RenderFillRect renderer (address (make-rect (+ xx (* x TS)) (+ yy (* y TS)) TS TS))))))))


(defn handle-events [app rend]
  (let [event (SDL_Event_init)]
    (while (SDL_PollEvent (address event))
      (let [et (event-type &event)]
        (cond (= et SDL_QUIT) (quit app)
              ())))))
